<div class="flex flex-col items-center justify-center min-h-screen bg-gradient-to-br from-[#FFD08F] to-[#F26B9C] bg-fixed text-white">

  <div class="flex flex-col items-center justify-center min-h-screen text-white">
    <h1 class="text-4xl font-bold mb-4">üéâ  Happy Birthday Satchan BNK48 üéâ</h1>
    <div class="relative w-[500px] h-[500px] overflow-hidden bg-black rounded-lg shadow-lg">
      <%= image_tag(@images.first, id: "slideshow", alt: "slideshow", class: "absolute inset-0 w-full h-full object-cover fade show") %>
    </div>
    <canvas id="fireworksCanvas" class="absolute inset-0"></canvas>
  </div>

</div>

<script>
  function createFireworks() {
    const canvas = document.getElementById('fireworksCanvas');
    const ctx = canvas.getContext('2d');
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    const particles = [];
    let fireworksRunning = true; // ‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô

    function Particle(x, y, color) {
      this.x = x;
      this.y = y;
      this.color = color;
      this.radius = Math.random() * 3 + 2;
      this.speedX = Math.random() * 4 - 2;
      this.speedY = Math.random() * 4 - 2;
      this.life = 0;
      this.maxLife = Math.random() * 40 + 60;

      this.update = function () {
        this.x += this.speedX;
        this.y += this.speedY;
        this.life++;
      };

      this.draw = function () {
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);
        ctx.fillStyle = this.color;
        ctx.fill();
      };
    }

    function explode(x, y) {
      if (!fireworksRunning) return; // ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡πâ‡∏≤ fireworks ‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î
      const colors = ['#ff6f61', '#ffcc00', '#33cc33', '#3399ff', '#cc66ff'];
      for (let i = 0; i < 100; i++) {
        particles.push(new Particle(x, y, colors[Math.floor(Math.random() * colors.length)]));
      }
    }

    function animate() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);

      particles.forEach((particle, index) => {
        particle.update();
        particle.draw();
        if (particle.life > particle.maxLife) {
          particles.splice(index, 1);
        }
      });

      if (fireworksRunning) {
        requestAnimationFrame(animate);
      }
    }

    canvas.addEventListener('click', (e) => {
      explode(e.clientX, e.clientY);
    });

    const interval = setInterval(() => {
      explode(Math.random() * canvas.width, Math.random() * canvas.height);
    }, 1000);

    setTimeout(() => {
      fireworksRunning = false; // ‡∏´‡∏¢‡∏∏‡∏î‡∏î‡∏≠‡∏Å‡πÑ‡∏°‡πâ‡πÑ‡∏ü
      clearInterval(interval); // ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å explode
      canvas.style.display = 'none'; // ‡∏ã‡πà‡∏≠‡∏ô Canvas
    }, 30000); // ‡∏´‡∏¢‡∏∏‡∏î‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ

    animate();
  }

  document.addEventListener('DOMContentLoaded', createFireworks);
</script>
